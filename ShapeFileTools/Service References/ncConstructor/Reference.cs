//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tripodmaps.ncConstructor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NACResult", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    [System.SerializableAttribute()]
    public partial class NACResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAC1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAC2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAC3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAC4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAC5Field;
        
        private double CenterLatitudeField;
        
        private double CenterLongitudeField;
        
        private double NorthingField;
        
        private double EastingField;
        
        private double SouthLatitudeField;
        
        private double WestLongitudeField;
        
        private double NorthLatitudeField;
        
        private double EastLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Query {
            get {
                return this.QueryField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryField, value) != true)) {
                    this.QueryField = value;
                    this.RaisePropertyChanged("Query");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string NAC {
            get {
                return this.NACField;
            }
            set {
                if ((object.ReferenceEquals(this.NACField, value) != true)) {
                    this.NACField = value;
                    this.RaisePropertyChanged("NAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string NAC1 {
            get {
                return this.NAC1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NAC1Field, value) != true)) {
                    this.NAC1Field = value;
                    this.RaisePropertyChanged("NAC1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string NAC2 {
            get {
                return this.NAC2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NAC2Field, value) != true)) {
                    this.NAC2Field = value;
                    this.RaisePropertyChanged("NAC2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string NAC3 {
            get {
                return this.NAC3Field;
            }
            set {
                if ((object.ReferenceEquals(this.NAC3Field, value) != true)) {
                    this.NAC3Field = value;
                    this.RaisePropertyChanged("NAC3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string NAC4 {
            get {
                return this.NAC4Field;
            }
            set {
                if ((object.ReferenceEquals(this.NAC4Field, value) != true)) {
                    this.NAC4Field = value;
                    this.RaisePropertyChanged("NAC4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string NAC5 {
            get {
                return this.NAC5Field;
            }
            set {
                if ((object.ReferenceEquals(this.NAC5Field, value) != true)) {
                    this.NAC5Field = value;
                    this.RaisePropertyChanged("NAC5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public double CenterLatitude {
            get {
                return this.CenterLatitudeField;
            }
            set {
                if ((this.CenterLatitudeField.Equals(value) != true)) {
                    this.CenterLatitudeField = value;
                    this.RaisePropertyChanged("CenterLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public double CenterLongitude {
            get {
                return this.CenterLongitudeField;
            }
            set {
                if ((this.CenterLongitudeField.Equals(value) != true)) {
                    this.CenterLongitudeField = value;
                    this.RaisePropertyChanged("CenterLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public double Northing {
            get {
                return this.NorthingField;
            }
            set {
                if ((this.NorthingField.Equals(value) != true)) {
                    this.NorthingField = value;
                    this.RaisePropertyChanged("Northing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public double Easting {
            get {
                return this.EastingField;
            }
            set {
                if ((this.EastingField.Equals(value) != true)) {
                    this.EastingField = value;
                    this.RaisePropertyChanged("Easting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public double SouthLatitude {
            get {
                return this.SouthLatitudeField;
            }
            set {
                if ((this.SouthLatitudeField.Equals(value) != true)) {
                    this.SouthLatitudeField = value;
                    this.RaisePropertyChanged("SouthLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public double WestLongitude {
            get {
                return this.WestLongitudeField;
            }
            set {
                if ((this.WestLongitudeField.Equals(value) != true)) {
                    this.WestLongitudeField = value;
                    this.RaisePropertyChanged("WestLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public double NorthLatitude {
            get {
                return this.NorthLatitudeField;
            }
            set {
                if ((this.NorthLatitudeField.Equals(value) != true)) {
                    this.NorthLatitudeField = value;
                    this.RaisePropertyChanged("NorthLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public double EastLongitude {
            get {
                return this.EastLongitudeField;
            }
            set {
                if ((this.EastLongitudeField.Equals(value) != true)) {
                    this.EastLongitudeField = value;
                    this.RaisePropertyChanged("EastLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocodingResult", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    [System.SerializableAttribute()]
    public partial class GeocodingResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputInfoField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormattedAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllMatchedAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllMatchedPlacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string InputInfo {
            get {
                return this.InputInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InputInfoField, value) != true)) {
                    this.InputInfoField = value;
                    this.RaisePropertyChanged("InputInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string NAC {
            get {
                return this.NACField;
            }
            set {
                if ((object.ReferenceEquals(this.NACField, value) != true)) {
                    this.NACField = value;
                    this.RaisePropertyChanged("NAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string ZIP {
            get {
                return this.ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIPField, value) != true)) {
                    this.ZIPField = value;
                    this.RaisePropertyChanged("ZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string FormattedAddress {
            get {
                return this.FormattedAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FormattedAddressField, value) != true)) {
                    this.FormattedAddressField = value;
                    this.RaisePropertyChanged("FormattedAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityTypeField, value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string Confidence {
            get {
                return this.ConfidenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfidenceField, value) != true)) {
                    this.ConfidenceField = value;
                    this.RaisePropertyChanged("Confidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string AllMatchedAddresses {
            get {
                return this.AllMatchedAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllMatchedAddressesField, value) != true)) {
                    this.AllMatchedAddressesField = value;
                    this.RaisePropertyChanged("AllMatchedAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string AllMatchedPlaces {
            get {
                return this.AllMatchedPlacesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllMatchedPlacesField, value) != true)) {
                    this.AllMatchedPlacesField = value;
                    this.RaisePropertyChanged("AllMatchedPlaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MappingResult", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    [System.SerializableAttribute()]
    public partial class MappingResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double SouthLatitudeField;
        
        private double WestLongitudeField;
        
        private double NorthLatitudeField;
        
        private double EastLongitudeField;
        
        private double NorthingField;
        
        private double EastingField;
        
        private int MapWidthField;
        
        private int MapHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagerySetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HotspotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double SouthLatitude {
            get {
                return this.SouthLatitudeField;
            }
            set {
                if ((this.SouthLatitudeField.Equals(value) != true)) {
                    this.SouthLatitudeField = value;
                    this.RaisePropertyChanged("SouthLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double WestLongitude {
            get {
                return this.WestLongitudeField;
            }
            set {
                if ((this.WestLongitudeField.Equals(value) != true)) {
                    this.WestLongitudeField = value;
                    this.RaisePropertyChanged("WestLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double NorthLatitude {
            get {
                return this.NorthLatitudeField;
            }
            set {
                if ((this.NorthLatitudeField.Equals(value) != true)) {
                    this.NorthLatitudeField = value;
                    this.RaisePropertyChanged("NorthLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public double EastLongitude {
            get {
                return this.EastLongitudeField;
            }
            set {
                if ((this.EastLongitudeField.Equals(value) != true)) {
                    this.EastLongitudeField = value;
                    this.RaisePropertyChanged("EastLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public double Northing {
            get {
                return this.NorthingField;
            }
            set {
                if ((this.NorthingField.Equals(value) != true)) {
                    this.NorthingField = value;
                    this.RaisePropertyChanged("Northing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public double Easting {
            get {
                return this.EastingField;
            }
            set {
                if ((this.EastingField.Equals(value) != true)) {
                    this.EastingField = value;
                    this.RaisePropertyChanged("Easting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int MapWidth {
            get {
                return this.MapWidthField;
            }
            set {
                if ((this.MapWidthField.Equals(value) != true)) {
                    this.MapWidthField = value;
                    this.RaisePropertyChanged("MapWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int MapHeight {
            get {
                return this.MapHeightField;
            }
            set {
                if ((this.MapHeightField.Equals(value) != true)) {
                    this.MapHeightField = value;
                    this.RaisePropertyChanged("MapHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Culture {
            get {
                return this.CultureField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureField, value) != true)) {
                    this.CultureField = value;
                    this.RaisePropertyChanged("Culture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string ImagerySet {
            get {
                return this.ImagerySetField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagerySetField, value) != true)) {
                    this.ImagerySetField = value;
                    this.RaisePropertyChanged("ImagerySet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string Objects {
            get {
                return this.ObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsField, value) != true)) {
                    this.ObjectsField = value;
                    this.RaisePropertyChanged("Objects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string Hotspots {
            get {
                return this.HotspotsField;
            }
            set {
                if ((object.ReferenceEquals(this.HotspotsField, value) != true)) {
                    this.HotspotsField = value;
                    this.RaisePropertyChanged("Hotspots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string MapURL {
            get {
                return this.MapURLField;
            }
            set {
                if ((object.ReferenceEquals(this.MapURLField, value) != true)) {
                    this.MapURLField = value;
                    this.RaisePropertyChanged("MapURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoutingResult", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    [System.SerializableAttribute()]
    public partial class RoutingResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaypointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvoidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptimizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistanceUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagerySetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapLayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoutePathOutputField;
        
        private double TotalDistanceField;
        
        private double TotalTravelTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathpointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Waypoints {
            get {
                return this.WaypointsField;
            }
            set {
                if ((object.ReferenceEquals(this.WaypointsField, value) != true)) {
                    this.WaypointsField = value;
                    this.RaisePropertyChanged("Waypoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string TravelMode {
            get {
                return this.TravelModeField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelModeField, value) != true)) {
                    this.TravelModeField = value;
                    this.RaisePropertyChanged("TravelMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Avoid {
            get {
                return this.AvoidField;
            }
            set {
                if ((object.ReferenceEquals(this.AvoidField, value) != true)) {
                    this.AvoidField = value;
                    this.RaisePropertyChanged("Avoid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Optimize {
            get {
                return this.OptimizeField;
            }
            set {
                if ((object.ReferenceEquals(this.OptimizeField, value) != true)) {
                    this.OptimizeField = value;
                    this.RaisePropertyChanged("Optimize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string TimeType {
            get {
                return this.TimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeTypeField, value) != true)) {
                    this.TimeTypeField = value;
                    this.RaisePropertyChanged("TimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeField, value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Culture {
            get {
                return this.CultureField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureField, value) != true)) {
                    this.CultureField = value;
                    this.RaisePropertyChanged("Culture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string DistanceUnit {
            get {
                return this.DistanceUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.DistanceUnitField, value) != true)) {
                    this.DistanceUnitField = value;
                    this.RaisePropertyChanged("DistanceUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string ShowMap {
            get {
                return this.ShowMapField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowMapField, value) != true)) {
                    this.ShowMapField = value;
                    this.RaisePropertyChanged("ShowMap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string MapSize {
            get {
                return this.MapSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.MapSizeField, value) != true)) {
                    this.MapSizeField = value;
                    this.RaisePropertyChanged("MapSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string ImagerySet {
            get {
                return this.ImagerySetField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagerySetField, value) != true)) {
                    this.ImagerySetField = value;
                    this.RaisePropertyChanged("ImagerySet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string MapLayer {
            get {
                return this.MapLayerField;
            }
            set {
                if ((object.ReferenceEquals(this.MapLayerField, value) != true)) {
                    this.MapLayerField = value;
                    this.RaisePropertyChanged("MapLayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string RoutePathOutput {
            get {
                return this.RoutePathOutputField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutePathOutputField, value) != true)) {
                    this.RoutePathOutputField = value;
                    this.RaisePropertyChanged("RoutePathOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public double TotalDistance {
            get {
                return this.TotalDistanceField;
            }
            set {
                if ((this.TotalDistanceField.Equals(value) != true)) {
                    this.TotalDistanceField = value;
                    this.RaisePropertyChanged("TotalDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public double TotalTravelTime {
            get {
                return this.TotalTravelTimeField;
            }
            set {
                if ((this.TotalTravelTimeField.Equals(value) != true)) {
                    this.TotalTravelTimeField = value;
                    this.RaisePropertyChanged("TotalTravelTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string Directions {
            get {
                return this.DirectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionsField, value) != true)) {
                    this.DirectionsField = value;
                    this.RaisePropertyChanged("Directions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string MapURL {
            get {
                return this.MapURLField;
            }
            set {
                if ((object.ReferenceEquals(this.MapURLField, value) != true)) {
                    this.MapURLField = value;
                    this.RaisePropertyChanged("MapURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string Pathpoints {
            get {
                return this.PathpointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PathpointsField, value) != true)) {
                    this.PathpointsField = value;
                    this.RaisePropertyChanged("Pathpoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", ConfigurationName="ncConstructor.soapgeoservicesSoap")]
    public interface soapgeoservicesSoap {
        
        // CODEGEN: Generating message contract since element name Input from namespace http://mlbs.net/nacgeoservicesV5.0/soapgeoservices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices/NACConverter", ReplyAction="*")]
        Tripodmaps.ncConstructor.NACConverterResponse NACConverter(Tripodmaps.ncConstructor.NACConverterRequest request);
        
        // CODEGEN: Generating message contract since element name Query from namespace http://mlbs.net/nacgeoservicesV5.0/soapgeoservices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices/Geocoding", ReplyAction="*")]
        Tripodmaps.ncConstructor.GeocodingResponse Geocoding(Tripodmaps.ncConstructor.GeocodingRequest request);
        
        // CODEGEN: Generating message contract since element name MapArea from namespace http://mlbs.net/nacgeoservicesV5.0/soapgeoservices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices/Mapping", ReplyAction="*")]
        Tripodmaps.ncConstructor.MappingResponse Mapping(Tripodmaps.ncConstructor.MappingRequest request);
        
        // CODEGEN: Generating message contract since element name Waypoints from namespace http://mlbs.net/nacgeoservicesV5.0/soapgeoservices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices/Routing", ReplyAction="*")]
        Tripodmaps.ncConstructor.RoutingResponse Routing(Tripodmaps.ncConstructor.RoutingRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NACConverterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NACConverter", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", Order=0)]
        public Tripodmaps.ncConstructor.NACConverterRequestBody Body;
        
        public NACConverterRequest() {
        }
        
        public NACConverterRequest(Tripodmaps.ncConstructor.NACConverterRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    public partial class NACConverterRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long UserID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Input;
        
        public NACConverterRequestBody() {
        }
        
        public NACConverterRequestBody(long UserID, string Input) {
            this.UserID = UserID;
            this.Input = Input;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NACConverterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NACConverterResponse", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", Order=0)]
        public Tripodmaps.ncConstructor.NACConverterResponseBody Body;
        
        public NACConverterResponse() {
        }
        
        public NACConverterResponse(Tripodmaps.ncConstructor.NACConverterResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    public partial class NACConverterResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Tripodmaps.ncConstructor.NACResult NACConverterResult;
        
        public NACConverterResponseBody() {
        }
        
        public NACConverterResponseBody(Tripodmaps.ncConstructor.NACResult NACConverterResult) {
            this.NACConverterResult = NACConverterResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GeocodingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Geocoding", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", Order=0)]
        public Tripodmaps.ncConstructor.GeocodingRequestBody Body;
        
        public GeocodingRequest() {
        }
        
        public GeocodingRequest(Tripodmaps.ncConstructor.GeocodingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    public partial class GeocodingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long UserID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Query;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Street;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string City;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string State;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ZIP;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Country;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Culture;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string SuppressError;
        
        public GeocodingRequestBody() {
        }
        
        public GeocodingRequestBody(long UserID, string Query, string Street, string City, string State, string ZIP, string Country, string Culture, string SuppressError) {
            this.UserID = UserID;
            this.Query = Query;
            this.Street = Street;
            this.City = City;
            this.State = State;
            this.ZIP = ZIP;
            this.Country = Country;
            this.Culture = Culture;
            this.SuppressError = SuppressError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GeocodingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GeocodingResponse", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", Order=0)]
        public Tripodmaps.ncConstructor.GeocodingResponseBody Body;
        
        public GeocodingResponse() {
        }
        
        public GeocodingResponse(Tripodmaps.ncConstructor.GeocodingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    public partial class GeocodingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Tripodmaps.ncConstructor.GeocodingResult GeocodingResult;
        
        public GeocodingResponseBody() {
        }
        
        public GeocodingResponseBody(Tripodmaps.ncConstructor.GeocodingResult GeocodingResult) {
            this.GeocodingResult = GeocodingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MappingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Mapping", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", Order=0)]
        public Tripodmaps.ncConstructor.MappingRequestBody Body;
        
        public MappingRequest() {
        }
        
        public MappingRequest(Tripodmaps.ncConstructor.MappingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    public partial class MappingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long UserID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string MapArea;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ImagerySet;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string MapSize;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string DrawObjects;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Objects;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string MapLayer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Culture;
        
        public MappingRequestBody() {
        }
        
        public MappingRequestBody(long UserID, string MapArea, string ImagerySet, string MapSize, string DrawObjects, string Objects, string MapLayer, string Culture) {
            this.UserID = UserID;
            this.MapArea = MapArea;
            this.ImagerySet = ImagerySet;
            this.MapSize = MapSize;
            this.DrawObjects = DrawObjects;
            this.Objects = Objects;
            this.MapLayer = MapLayer;
            this.Culture = Culture;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MappingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MappingResponse", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", Order=0)]
        public Tripodmaps.ncConstructor.MappingResponseBody Body;
        
        public MappingResponse() {
        }
        
        public MappingResponse(Tripodmaps.ncConstructor.MappingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    public partial class MappingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Tripodmaps.ncConstructor.MappingResult MappingResult;
        
        public MappingResponseBody() {
        }
        
        public MappingResponseBody(Tripodmaps.ncConstructor.MappingResult MappingResult) {
            this.MappingResult = MappingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RoutingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Routing", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", Order=0)]
        public Tripodmaps.ncConstructor.RoutingRequestBody Body;
        
        public RoutingRequest() {
        }
        
        public RoutingRequest(Tripodmaps.ncConstructor.RoutingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    public partial class RoutingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long UserID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Waypoints;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string TravelMode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Avoid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Optimize;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string TimeType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string DateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Culture;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string DistanceUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string ShowMap;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string MapSize;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string ImagerySet;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string MapLayer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string RoutePathOutput;
        
        public RoutingRequestBody() {
        }
        
        public RoutingRequestBody(long UserID, string Waypoints, string TravelMode, string Avoid, string Optimize, string TimeType, string DateTime, string Culture, string DistanceUnit, string ShowMap, string MapSize, string ImagerySet, string MapLayer, string RoutePathOutput) {
            this.UserID = UserID;
            this.Waypoints = Waypoints;
            this.TravelMode = TravelMode;
            this.Avoid = Avoid;
            this.Optimize = Optimize;
            this.TimeType = TimeType;
            this.DateTime = DateTime;
            this.Culture = Culture;
            this.DistanceUnit = DistanceUnit;
            this.ShowMap = ShowMap;
            this.MapSize = MapSize;
            this.ImagerySet = ImagerySet;
            this.MapLayer = MapLayer;
            this.RoutePathOutput = RoutePathOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RoutingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RoutingResponse", Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices", Order=0)]
        public Tripodmaps.ncConstructor.RoutingResponseBody Body;
        
        public RoutingResponse() {
        }
        
        public RoutingResponse(Tripodmaps.ncConstructor.RoutingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mlbs.net/nacgeoservicesV5.0/soapgeoservices")]
    public partial class RoutingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Tripodmaps.ncConstructor.RoutingResult RoutingResult;
        
        public RoutingResponseBody() {
        }
        
        public RoutingResponseBody(Tripodmaps.ncConstructor.RoutingResult RoutingResult) {
            this.RoutingResult = RoutingResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface soapgeoservicesSoapChannel : Tripodmaps.ncConstructor.soapgeoservicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class soapgeoservicesSoapClient : System.ServiceModel.ClientBase<Tripodmaps.ncConstructor.soapgeoservicesSoap>, Tripodmaps.ncConstructor.soapgeoservicesSoap {
        
        public soapgeoservicesSoapClient() {
        }
        
        public soapgeoservicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public soapgeoservicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public soapgeoservicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public soapgeoservicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tripodmaps.ncConstructor.NACConverterResponse Tripodmaps.ncConstructor.soapgeoservicesSoap.NACConverter(Tripodmaps.ncConstructor.NACConverterRequest request) {
            return base.Channel.NACConverter(request);
        }
        
        public Tripodmaps.ncConstructor.NACResult NACConverter(long UserID, string Input) {
            Tripodmaps.ncConstructor.NACConverterRequest inValue = new Tripodmaps.ncConstructor.NACConverterRequest();
            inValue.Body = new Tripodmaps.ncConstructor.NACConverterRequestBody();
            inValue.Body.UserID = UserID;
            inValue.Body.Input = Input;
            Tripodmaps.ncConstructor.NACConverterResponse retVal = ((Tripodmaps.ncConstructor.soapgeoservicesSoap)(this)).NACConverter(inValue);
            return retVal.Body.NACConverterResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tripodmaps.ncConstructor.GeocodingResponse Tripodmaps.ncConstructor.soapgeoservicesSoap.Geocoding(Tripodmaps.ncConstructor.GeocodingRequest request) {
            return base.Channel.Geocoding(request);
        }
        
        public Tripodmaps.ncConstructor.GeocodingResult Geocoding(long UserID, string Query, string Street, string City, string State, string ZIP, string Country, string Culture, string SuppressError) {
            Tripodmaps.ncConstructor.GeocodingRequest inValue = new Tripodmaps.ncConstructor.GeocodingRequest();
            inValue.Body = new Tripodmaps.ncConstructor.GeocodingRequestBody();
            inValue.Body.UserID = UserID;
            inValue.Body.Query = Query;
            inValue.Body.Street = Street;
            inValue.Body.City = City;
            inValue.Body.State = State;
            inValue.Body.ZIP = ZIP;
            inValue.Body.Country = Country;
            inValue.Body.Culture = Culture;
            inValue.Body.SuppressError = SuppressError;
            Tripodmaps.ncConstructor.GeocodingResponse retVal = ((Tripodmaps.ncConstructor.soapgeoservicesSoap)(this)).Geocoding(inValue);
            return retVal.Body.GeocodingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tripodmaps.ncConstructor.MappingResponse Tripodmaps.ncConstructor.soapgeoservicesSoap.Mapping(Tripodmaps.ncConstructor.MappingRequest request) {
            return base.Channel.Mapping(request);
        }
        
        public Tripodmaps.ncConstructor.MappingResult Mapping(long UserID, string MapArea, string ImagerySet, string MapSize, string DrawObjects, string Objects, string MapLayer, string Culture) {
            Tripodmaps.ncConstructor.MappingRequest inValue = new Tripodmaps.ncConstructor.MappingRequest();
            inValue.Body = new Tripodmaps.ncConstructor.MappingRequestBody();
            inValue.Body.UserID = UserID;
            inValue.Body.MapArea = MapArea;
            inValue.Body.ImagerySet = ImagerySet;
            inValue.Body.MapSize = MapSize;
            inValue.Body.DrawObjects = DrawObjects;
            inValue.Body.Objects = Objects;
            inValue.Body.MapLayer = MapLayer;
            inValue.Body.Culture = Culture;
            Tripodmaps.ncConstructor.MappingResponse retVal = ((Tripodmaps.ncConstructor.soapgeoservicesSoap)(this)).Mapping(inValue);
            return retVal.Body.MappingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tripodmaps.ncConstructor.RoutingResponse Tripodmaps.ncConstructor.soapgeoservicesSoap.Routing(Tripodmaps.ncConstructor.RoutingRequest request) {
            return base.Channel.Routing(request);
        }
        
        public Tripodmaps.ncConstructor.RoutingResult Routing(long UserID, string Waypoints, string TravelMode, string Avoid, string Optimize, string TimeType, string DateTime, string Culture, string DistanceUnit, string ShowMap, string MapSize, string ImagerySet, string MapLayer, string RoutePathOutput) {
            Tripodmaps.ncConstructor.RoutingRequest inValue = new Tripodmaps.ncConstructor.RoutingRequest();
            inValue.Body = new Tripodmaps.ncConstructor.RoutingRequestBody();
            inValue.Body.UserID = UserID;
            inValue.Body.Waypoints = Waypoints;
            inValue.Body.TravelMode = TravelMode;
            inValue.Body.Avoid = Avoid;
            inValue.Body.Optimize = Optimize;
            inValue.Body.TimeType = TimeType;
            inValue.Body.DateTime = DateTime;
            inValue.Body.Culture = Culture;
            inValue.Body.DistanceUnit = DistanceUnit;
            inValue.Body.ShowMap = ShowMap;
            inValue.Body.MapSize = MapSize;
            inValue.Body.ImagerySet = ImagerySet;
            inValue.Body.MapLayer = MapLayer;
            inValue.Body.RoutePathOutput = RoutePathOutput;
            Tripodmaps.ncConstructor.RoutingResponse retVal = ((Tripodmaps.ncConstructor.soapgeoservicesSoap)(this)).Routing(inValue);
            return retVal.Body.RoutingResult;
        }
    }
}
